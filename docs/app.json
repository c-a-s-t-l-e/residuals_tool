[{"name":"app.R","content":"library(shiny)\nlibrary(bslib)\nlibrary(tidyverse)\n\nui <- page_navbar(\n  title = \"Regression Statistics Calculator\",\n  theme = bs_theme(bootswatch = \"flatly\"),\n  \n  nav_panel(\"Visualization & Results\",\n            layout_sidebar(\n              sidebar = sidebar(\n                fileInput(\"file\", \"Upload CSV file\"),\n                selectInput(\"x_var\", \"Select X Variable\", choices = NULL),\n                selectInput(\"y_var\", \"Select Y Variable\", choices = NULL),\n                checkboxGroupInput(\"show_elements\", \"Show on Plot:\",\n                                   choices = c(\n                                     \"Residuals\" = \"residuals\",\n                                     \"Mean Line\" = \"mean_line\",\n                                     \"Fitted Values\" = \"fitted\",\n                                     \"SSE Components\" = \"sse\",\n                                     \"SSR Components\" = \"ssr\"\n                                   ),\n                                   selected = \"residuals\"\n                )\n              ),\n              \n              layout_columns(\n                card(\n                  card_header(\"Scatter Plot with Regression Line\"),\n                  plotOutput(\"scatter_plot\", height = \"500px\")\n                ),\n                card(\n                  card_header(\"Statistical Results\"),\n                  tableOutput(\"stats_table\")\n                )\n              )\n            )\n  ),\n  \n  nav_panel(\"Calculations & Code\",\n            card(\n              card_header(\"Mathematical Formulas and R Code\"),\n              HTML(\"\n        <h4>Formulas:<\/h4>\n        <ul>\n          <li>Residual (e<sub>i<\/sub>) = y<sub>i<\/sub> - ŷ<sub>i<\/sub><\/li>\n          <li>SSE (Sum of Squared Errors) = Σ(y<sub>i<\/sub> - ŷ<sub>i<\/sub>)²<\/li>\n          <li>SSR (Sum of Squares Regression) = Σ(ŷ<sub>i<\/sub> - ȳ)²<\/li>\n          <li>SSTO (Total Sum of Squares) = Σ(y<sub>i<\/sub> - ȳ)²<\/li>\n          <li>R² = SSR/SSTO = 1 - SSE/SSTO<\/li>\n          <li>MSE (Mean Squared Error) = SSE/(n-2)<\/li>\n          <li>Residual Standard Error = √MSE<\/li>\n        <\/ul>\n      \"),\n              verbatimTextOutput(\"r_code\")\n            )\n  )\n)\n\nserver <- function(input, output, session) {\n  data <- reactive({\n    req(input$file)\n    read.csv(input$file$datapath)\n  })\n  \n  observeEvent(data(), {\n    choices <- names(data())\n    updateSelectInput(session, \"x_var\", choices = choices)\n    updateSelectInput(session, \"y_var\", choices = choices)\n  })\n  \n  model_results <- reactive({\n    req(input$x_var, input$y_var)\n    \n    x <- data()[[input$x_var]]\n    y <- data()[[input$y_var]]\n    \n    # Fit model\n    model <- lm(y ~ x)\n    \n    # Calculate components\n    y_hat <- fitted(model)\n    residuals <- residuals(model)\n    y_mean <- mean(y)\n    \n    # Calculate sums of squares\n    sse <- sum(residuals^2)\n    ssr <- sum((y_hat - y_mean)^2)\n    ssto <- sum((y - y_mean)^2)\n    \n    # Calculate other statistics\n    r_squared <- ssr/ssto\n    n <- length(y)\n    mse <- sse/(n-2)\n    res_std_error <- sqrt(mse)\n    \n    list(\n      model = model,\n      sse = sse,\n      ssr = ssr,\n      ssto = ssto,\n      r_squared = r_squared,\n      mse = mse,\n      res_std_error = res_std_error,\n      x = x,\n      y = y,\n      y_hat = y_hat,\n      y_mean = y_mean,\n      residuals = residuals\n    )\n  })\n  \n  output$scatter_plot <- renderPlot({\n    res <- model_results()\n    \n    # Create data frame for predictions\n    new_x <- data.frame(x = seq(min(res$x), max(res$x), length.out = 100))\n    predicted <- predict(res$model, newdata = data.frame(x = new_x$x))\n    \n    # Base plot\n    p <- ggplot(data.frame(x = res$x, y = res$y), aes(x = x, y = y)) +\n      theme_minimal(base_size = 14) +\n      labs(x = input$x_var, y = input$y_var)\n    \n    # Add SSR components if selected\n    if (\"ssr\" %in% input$show_elements) {\n      segments_data <- data.frame(\n        x = res$x,\n        y = res$y_hat,\n        yend = res$y_mean\n      )\n      p <- p + geom_segment(data = segments_data,\n                            aes(x = x, y = y, xend = x, yend = yend),\n                            color = \"blue\", alpha = 0.5, linewidth = 2)\n    }\n    \n    # Add SSE components if selected\n    if (\"sse\" %in% input$show_elements) {\n      segments_data <- data.frame(\n        x = res$x,\n        y = res$y,\n        yend = res$y_hat\n      )\n      p <- p + geom_segment(data = segments_data,\n                            aes(x = x, y = y, xend = x, yend = yend),\n                            color = \"red\", alpha = 0.5, linewidth = 2)\n    }\n    \n    # Add mean line if selected\n    if (\"mean_line\" %in% input$show_elements) {\n      p <- p + geom_hline(yintercept = res$y_mean, color = \"darkgreen\", \n                          linetype = \"dashed\", linewidth = 1)\n    }\n    \n    # Add regression line using predicted values\n    p <- p + geom_line(data = data.frame(x = new_x$x, y = predicted), \n                       aes(x = x, y = y), \n                       color = \"blue\", \n                       linewidth = 1) +\n      geom_point(size = 3)\n    \n    # Add fitted points if selected\n    if (\"fitted\" %in% input$show_elements) {\n      p <- p + geom_point(aes(y = res$y_hat), color = \"blue\", size = 3, shape = 1)\n    }\n    \n    # Add residuals if selected\n    if (\"residuals\" %in% input$show_elements) {\n      segments_data <- data.frame(\n        x = res$x,\n        y = res$y,\n        xend = res$x,\n        yend = res$y_hat\n      )\n      p <- p + geom_segment(data = segments_data,\n                            aes(x = x, y = y, xend = xend, yend = yend),\n                            color = \"red\", linetype = \"dashed\")\n    }\n    \n    p\n  })\n  \n  output$r_code <- renderText({\n    res <- model_results()\n    sprintf('\n# R code for calculations:\nx <- data$%s\ny <- data$%s\n\n# Fit linear model\nmodel <- lm(y ~ x)\n\n# Get fitted values and residuals\ny_hat <- fitted(model)\nresiduals <- residuals(model)\ny_mean <- mean(y)\n\n# Calculate sums of squares\nSSE <- sum(residuals^2)  # Sum of Squared Errors\nSSR <- sum((y_hat - y_mean)^2)  # Sum of Squares Regression\nSSTO <- sum((y - y_mean)^2)  # Total Sum of Squares\n\n# Calculate other statistics\nR_squared <- SSR/SSTO\nn <- length(y)\nMSE <- SSE/(n-2)  # Mean Squared Error\nResidual_Std_Error <- sqrt(MSE)\n    ', input$x_var, input$y_var)\n  })\n}\n\nshinyApp(ui, server)","type":"text"}]
